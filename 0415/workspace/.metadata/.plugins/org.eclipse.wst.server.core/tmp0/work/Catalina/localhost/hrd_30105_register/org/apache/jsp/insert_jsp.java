/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.86
 * Generated at: 2024-04-15 09:37:14 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.sql.*;
import java.sql.*;

public final class insert_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(3);
    _jspx_dependants.put("/./header.jsp", Long.valueOf(1713168594441L));
    _jspx_dependants.put("/db.jsp", Long.valueOf(1713168594441L));
    _jspx_dependants.put("/./footer.jsp", Long.valueOf(1713168594441L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.LinkedHashSet<>(4);
    _jspx_imports_packages.add("java.sql");
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write('\r');
      out.write('\n');
      out.write("\r\n");
      out.write("\r\n");
      out.write("    ");

    	Class.forName("oracle.jdbc.OracleDriver");
    	Connection conn = DriverManager.getConnection("jdbc:oracle:thin:@//localhost:1521/xe", "system", "1234");
    
      out.write('\r');
      out.write('\n');
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<title>수강신청 페이지</title>\r\n");
      out.write("<style>\r\n");
      out.write("\r\n");
      out.write("* {\r\n");
      out.write("	text-decoration: none;\r\n");
      out.write("	list-style: none;\r\n");
      out.write("	box-sizing: border-box;\r\n");
      out.write("	margin: 0;\r\n");
      out.write("	padding: 0;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("header {\r\n");
      out.write("	width: 100%;\r\n");
      out.write("	height: 100px;\r\n");
      out.write("	text-align: center;\r\n");
      out.write("}\r\n");
      out.write("header h2 {\r\n");
      out.write("	height: 50px;\r\n");
      out.write("	line-height: 50px;\r\n");
      out.write("	text-align:center;\r\n");
      out.write("	color: white;\r\n");
      out.write("	background-color: #009aff;\r\n");
      out.write("	margin: 0;\r\n");
      out.write("}\r\n");
      out.write("header nav {\r\n");
      out.write("	height: 50px;\r\n");
      out.write("	background-color: #00229a;\r\n");
      out.write("	display: flex;\r\n");
      out.write("	justify-content: start;\r\n");
      out.write("	gap: 30px;\r\n");
      out.write("	padding: 0 20px;\r\n");
      out.write("}\r\n");
      out.write("header nav *{\r\n");
      out.write("	color: white;\r\n");
      out.write("	line-height: 50px;\r\n");
      out.write("	display: block;\r\n");
      out.write("}\r\n");
      out.write("#container {\r\n");
      out.write("	min-height: calc(100vh - 100px - 50px);\r\n");
      out.write("	background-color: #ccc;\r\n");
      out.write("	padding-top: 75px;\r\n");
      out.write("}\r\n");
      out.write("#cont-title {\r\n");
      out.write("	padding: 10px 15px;\r\n");
      out.write("	text-align: center;\r\n");
      out.write("}\r\n");
      out.write("#inner-container {\r\n");
      out.write("	display:flex;\r\n");
      out.write("	text-align:center;\r\n");
      out.write("	align-items:center;\r\n");
      out.write("	justify-content:center;\r\n");
      out.write("}\r\n");
      out.write("td {\r\n");
      out.write("padding: 5px 15px;\r\n");
      out.write("}\r\n");
      out.write("td input {\r\n");
      out.write("	padding: 5px 15px;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("</style>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("	<header>\r\n");
      out.write("		<h2>수강신청 도우미 사이트</h2>\r\n");
      out.write("		<nav>\r\n");
      out.write("			<a href=\"./showList.jsp\">교과목목록 조회/수정</a>\r\n");
      out.write("			<a href=\"./insert.jsp\">교과목 추가</a>\r\n");
      out.write("			<a href=\"./index.jsp\">홈으로</a>\r\n");
      out.write("		</nav>\r\n");
      out.write("	</header>\r\n");
      out.write("	<section id=\"container\">");
      out.write("\r\n");
      out.write("\r\n");

	
	request.setCharacterEncoding("UTF-8");

	String listSql = "SELECT * FROM TBL_COURSE_202301 cr, TBL_LECTURER_202301 lc WHERE cr.l_id = lc.l_id";
	PreparedStatement pstmt = conn.prepareStatement(listSql);
	
	ResultSet rs = pstmt.executeQuery();


	

      out.write("\r\n");
      out.write("\r\n");
      out.write("<h2 id='cont-title'>\r\n");
      out.write("	교과목 추가\r\n");
      out.write("</h2>\r\n");
      out.write("<div id='inner-container'>\r\n");
      out.write("	<table border=\"1\">\r\n");
      out.write("		\r\n");
      out.write("		<tbody>\r\n");
      out.write("		<form action=\"i_action.jsp\" method=\"post\" id='insert_form'>\r\n");
      out.write("		\r\n");
      out.write("		\r\n");
      out.write("				\r\n");
      out.write("				<tr>\r\n");
      out.write("				<td>과목코드</td>\r\n");
      out.write("				<td><input type=\"text\" id='c_id' name='c_id' value=''/>\r\n");
      out.write("				</td>\r\n");
      out.write("			</tr>\r\n");
      out.write("			<tr>\r\n");
      out.write("				<td>과목명</td>\r\n");
      out.write("				<td><input type=\"text\" id='c_name' name='c_name' value=''/></td>\r\n");
      out.write("			</tr>\r\n");
      out.write("			<tr>\r\n");
      out.write("				<td>학점</td>\r\n");
      out.write("				<td><input type=\"number\" id='credit' name='credit' value=''/></td>\r\n");
      out.write("			</tr>\r\n");
      out.write("			<tr>\r\n");
      out.write("				<td>담당강사</td>\r\n");
      out.write("				<td>\r\n");
      out.write("				<select id='l_id' name='l_id' required>\r\n");
      out.write("					<option value='담당강사' disabled selected>담당강사</option>\r\n");
      out.write("					<option value='1'>김교수</option>\r\n");
      out.write("					<option value='2'>이교수</option>\r\n");
      out.write("					<option value='3'>박교수</option>\r\n");
      out.write("					<option value='4'>우교수</option>\r\n");
      out.write("					<option value='5'>최교수</option>\r\n");
      out.write("					<option value='6'>임교수</option>\r\n");
      out.write("				</select></td>\r\n");
      out.write("			</tr>\r\n");
      out.write("			<tr>\r\n");
      out.write("				<td>요일</td>\r\n");
      out.write("				<td id=\"weeks\">\r\n");
      out.write("					<input type=\"radio\" value=\"1\" name=\"week\" id=\"mon\">\r\n");
      out.write("					<label for=\"mon\">월</label>\r\n");
      out.write("					<input type=\"radio\" value=\"2\" name=\"week\" id=\"tue\">\r\n");
      out.write("					<label for=\"tue\">화</label>\r\n");
      out.write("					<input type=\"radio\" value=\"3\" name=\"week\" id=\"wed\">\r\n");
      out.write("					<label for=\"wed\">수</label>\r\n");
      out.write("					<input type=\"radio\" value=\"4\" name=\"week\" id=\"thu\">\r\n");
      out.write("					<label for=\"thu\">목</label>\r\n");
      out.write("					<input type=\"radio\" value=\"5\" name=\"week\" id=\"fri\">\r\n");
      out.write("					<label for=\"fri\">금</label>\r\n");
      out.write("				</td>\r\n");
      out.write("			</tr>\r\n");
      out.write("			<tr>\r\n");
      out.write("				<td>시작시간</td>\r\n");
      out.write("				<td><input type=\"number\" name='start_hour' id=\"start_hour\" value=\"\"></td>\r\n");
      out.write("			</tr>\r\n");
      out.write("			<tr>\r\n");
      out.write("				<td>종료시간</td>\r\n");
      out.write("				<td><input type=\"number\" name='end_hour' id=\"end_hour\" value=\"\"></td>\r\n");
      out.write("			</tr>\r\n");
      out.write("			<tr>\r\n");
      out.write("			<td colspan=\"2\">\r\n");
      out.write("				<button type=\"button\" onclick=\"validate()\">추가</button>\r\n");
      out.write("				<button type=\"button\" onclick=\"window.location.href='showList.jsp'\">목록</button>\r\n");
      out.write("			</td>\r\n");
      out.write("				\r\n");
      out.write("			</tr>\r\n");
      out.write("		</form>\r\n");
      out.write("			\r\n");
      out.write("		</tbody>\r\n");
      out.write("	\r\n");
      out.write("	</table>\r\n");
      out.write("</div>\r\n");
      out.write("<script>\r\n");
      out.write("	function validate() {\r\n");
      out.write("		const form = document.getElementById(\"insert_form\");\r\n");
      out.write("		const cId = document.getElementById(\"c_id\").value;\r\n");
      out.write("		const cName = document.getElementById(\"c_name\").value;\r\n");
      out.write("		const credit = document.getElementById(\"credit\").value;\r\n");
      out.write("		const lId = document.getElementById(\"l_id\").value;\r\n");
      out.write("		const week = document.querySelectorAll(\"input[name='week']\");\r\n");
      out.write("		\r\n");
      out.write("		let weekValue = 0;\r\n");
      out.write("		\r\n");
      out.write("		[...week].filter((x) => x.checked).forEach((x) => {\r\n");
      out.write("				weekValue = x.value;				\r\n");
      out.write("		})\r\n");
      out.write("		\r\n");
      out.write("		const startHour = document.getElementById(\"start_hour\").value;\r\n");
      out.write("		const endHour = document.getElementById(\"end_hour\").value;\r\n");
      out.write("		\r\n");
      out.write("		if(cId == \"\") {\r\n");
      out.write("			alert(\"과목 코드가 입력되지 않았습니다.\");\r\n");
      out.write("			return;\r\n");
      out.write("		}\r\n");
      out.write("		if(cName == \"\") {\r\n");
      out.write("			alert(\"과목명이 입력되지 않았습니다.\");\r\n");
      out.write("			return;\r\n");
      out.write("		}\r\n");
      out.write("		if(credit == \"\") {\r\n");
      out.write("			alert(\"학점이 입력되지 않았습니다.\");\r\n");
      out.write("			return;\r\n");
      out.write("		}\r\n");
      out.write("		if(lId == \"\" || lId == \"담당강사\") {\r\n");
      out.write("			alert(\"담당강사가 선택되지 않았습니다.\");\r\n");
      out.write("			return;\r\n");
      out.write("		}\r\n");
      out.write("		if(weekValue == 0) {\r\n");
      out.write("			alert(\"요일이 선택되지 않았습니다.\");\r\n");
      out.write("			return;\r\n");
      out.write("		}\r\n");
      out.write("		if(startHour == \"\") {\r\n");
      out.write("			alert(\"시작 시간이 입력되지 않았습니다.\");\r\n");
      out.write("			return;\r\n");
      out.write("		}\r\n");
      out.write("		if(endHour == \"\") {\r\n");
      out.write("			alert(\"종료 시간이 입력되지 않았습니다.\");\r\n");
      out.write("			return;\r\n");
      out.write("		}\r\n");
      out.write("		\r\n");
      out.write("		alert(\"교과목 등록이 완료되었습니다!\");\r\n");
      out.write("		form.submit();\r\n");
      out.write("		\r\n");
      out.write("	}\r\n");
      out.write("</script>\r\n");
      out.write("\r\n");
      out.write("	</section>\r\n");
      out.write("	<style>\r\n");
      out.write("	footer {\r\n");
      out.write("	background-color: #00229a;\r\n");
      out.write("	height: 50px;\r\n");
      out.write("	color: white;\r\n");
      out.write("	text-align: center;\r\n");
      out.write("	line-height: 50px;\r\n");
      out.write("	}\r\n");
      out.write("	</style>\r\n");
      out.write("	<footer>\r\n");
      out.write("		Copyright &copy; 서울문화고등학교 사물인터넷과 All Right Reserved\r\n");
      out.write("	</footer>\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
      out.write("\r\n");
      out.write("    ");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
